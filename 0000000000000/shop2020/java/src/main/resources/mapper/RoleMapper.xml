<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 定义命名空间 -->
<mapper namespace="com.shuogesha.platform.dao.RoleDao"> 
    <resultMap type="com.shuogesha.platform.entity.Role" id="RoleResult">
		<result property="id" column="id"/> 
		<result property="name" column="name"/> 
		<result property="description" column="description"/> 
		<result property="allperms" column="allperms"/> 
		<result property="sort" column="sort"/>  
		<collection property="perms" javaType="ArrayList"  column="id"                       
            select="findPerm"> 
        </collection>  
        
        <collection property="menus" javaType="ArrayList"  column="id"                       
            select="findRoleMenus"> 
        </collection> 
        
	</resultMap> 
	
    <select id="findPerm" parameterType="Long" resultType="String">
		select perm from t_role_perms where role_id=#{id};
	</select> 
	 
	<select id="findRoleMenus" parameterType="Long" resultType="Integer">
		select menu_id as id  from t_role_menu where role_id=#{id}; 
	</select>
	 
    
	<insert id="saveEntity" useGeneratedKeys="true" keyProperty="id" parameterType="com.shuogesha.platform.entity.Role" >
		insert into t_role values(null,#{name},#{description},#{allperms},#{sort})
	</insert>
    
 	 
 	<select id="queryList" parameterType="Map" resultMap="RoleResult">
		select * from t_role
		<if test="name!=null">where name like #{name}</if>
		order by id desc
		limit #{pageSize} offset #{offset}
	</select>
	
 	<select id="count" parameterType="Map" resultType="Long">
		select count(0) from t_role
		<if test="name!=null">where name like #{name}</if>
	</select>
	
 	
 	<select id="findById" parameterType="Long" resultMap="RoleResult">
		select * from t_role where id=#{id};
	</select>
	
 	<select id="removeById" parameterType="Long" resultMap="RoleResult">
		delete from t_role where id=#{id};
	</select>
 	
 	<update id="updateById" parameterType="com.shuogesha.platform.entity.Role"> 
 		update t_role set name=#{name},sort=#{sort},description=#{description},allperms=#{allperms} where id=#{id}
 	</update>
 	
 	<select id="findList" resultMap="RoleResult">
		select * from t_role
	</select>
	
 	<select id="findByUserId" parameterType="Long" resultMap="RoleResult">
		select r.* from t_role r where r.id in (SELECT DISTINCT (u.role_id) from t_role_user u  where u.user_id=#{id});
	</select>
	
 	<select id="removeRoleById" parameterType="Long">
		delete from t_role_perms where role_id=#{id}; 
	</select>
	
 	<insert id="addRolePerms" parameterType="com.shuogesha.platform.entity.Role">
 		<if test="perms!=null">
		insert into t_role_perms(role_id,perm)
 		values
		<foreach collection="perms" item="vi"  separator=",">
		(#{id},#{vi})
		</foreach>  
		ON DUPLICATE KEY UPDATE
 		perm = VALUES(perm) 
 		</if>
	</insert> 
	
 	<select id="removeRoleUser" parameterType="Map">
		delete from t_role_user where role_id=#{roleId}; 
	</select>
	
 	<insert id="addRoleUser" parameterType="Map">
		insert into t_role_user(user_id,role_id)
 		values
		<foreach collection="userList" item="vi"  separator=",">
		(#{vi},#{roleId})
		</foreach>  
		ON DUPLICATE KEY UPDATE
 		user_id = VALUES(user_id) 
	</insert> 
	
	<select id="removeRoleMenuById" parameterType="Long">
		delete from t_role_menu where role_id=#{id}; 
	</select>
	
	<insert id="addRoleMenus" parameterType="com.shuogesha.platform.entity.Role">
 		<if test="menus!=null">
		insert into t_role_menu(role_id,menu_id)
 		values
		<foreach collection="menus" item="vi"  separator=",">
		(#{id},#{vi.id})
		</foreach>  
		ON DUPLICATE KEY UPDATE
 		menu_id = VALUES(menu_id) 
 		</if>
	</insert> 
	
	<select id="countAllperms" parameterType="Map" resultType="Long">
		  	select count(0) from t_role m, t_role_user ur
  			where ur.role_id = m.id  and m.allPerms=1
  			<if test="userId!=null"> and ur.user_id = #{userId}</if>
	</select>
	 
	
	<!-- <select id="getAllMenusByUser" parameterType="Map" resultType="com.shuogesha.platform.entity.Menu">
		select distinct(m.id),m.* from t_menu m, t_role_user ur, t_role_menu rm
  		where ur.user_id = #{user_id} and ur.role_id = rm.role_id and rm.menu_id = m.id
	</select> -->
	
	 
	<resultMap type="Map" id="treeMenu">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="icon" column="icon" />
		<result property="path" column="path" />
		<result property="status" column="status" />
		<result property="sort" column="sort" />
		<result property="userId" column="user_id" />
		<result property="type" column="type" />
		<collection property="children" ofType="com.shuogesha.platform.entity.Menu" column="{id=id,userId=userId,type=type}"
			select="findMenuByParentId" />
	</resultMap>
	
	<select id="findMenuByParentId" resultMap="treeMenu">
		select distinct(m.id),ur.user_id,m.* from t_menu m, t_role_user ur, t_role_menu rm
  		where ur.user_id = #{userId} and ur.role_id = rm.role_id and rm.menu_id = m.id and m.pid=#{id} and m.status='0'
  		<if test="type!=null"> and m.type =#{type}</if>
   		order by m.sort asc
	</select>
	
	<select id="getAllMenusByUser" parameterType="Map" resultMap="treeMenu">
		select distinct(m.id),ur.userId,m.* from t_menu m, t_role_user ur, t_role_menu rm
  		where ur.user_id = #{userId} and ur.role_id = rm.role_id and rm.menu_id = m.id and (m.pid is null or m.pid =0) and m.status='0'
  		<if test="type!=null"> and m.type =#{type}</if>
  		order by m.sort asc
	</select>
	
	<select id="getAllPermsByUser" parameterType="Map" resultType="String">
  		select distinct(m.perms) from t_menu m, t_role_user ur, t_role_menu rm
  		where ur.user_id = #{userId} and ur.role_id = rm.role_id and rm.menu_id = m.id and m.status='0' and m.perms is not null
  		order by m.sort asc
	</select>
	
	<select id="getAllPerms" parameterType="Map" resultType="String">
  		select distinct(m.perms) from t_menu m where m.perms is not null 
   		order by m.sort asc
	</select>
	
</mapper>  