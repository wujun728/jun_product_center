<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"> 
		
	<diskStore path="java.io.tmpdir" />
	 <!-- eternal="false" 意味着该缓存会死亡
            maxElementsInMemory="1000"缓存的最大数目
            overflowToDisk="false" 内存不足时,是否启用磁盘缓存,如果为true则表示启动磁盘来存储，如果为false则表示不启动磁盘
            diskPersistent="false" 
            timeToIdleSeconds="0"  当缓存的内容闲置多少时间销毁
            timeToLiveSeconds="600" 当缓存存活多少时间销毁（单位是秒，如果我们想设置2分钟的缓存存活时间，那么这个值我们需要设置120）
            memoryStoreEvictionPolicy="LRU"  -->
     <!--自动销毁策略-->        
    <defaultCache  
		    maxElementsInMemory="10000"    
		    maxElementsOnDisk="0"    
		    eternal="false"    
		    overflowToDisk="true"    
		    diskPersistent="false"    
		    timeToIdleSeconds="0"    
		    timeToLiveSeconds="600"    
		    diskSpoolBufferSizeMB="50"    
		    diskExpiryThreadIntervalSeconds="120"  
 		    memoryStoreEvictionPolicy="LFU"/> 
            
            
            
    <cache
            name="count"
            maxElementsInMemory="1000"
            eternal="true"
            timeToIdleSeconds="300"
            timeToLiveSeconds="300"
            overflowToDisk="true"
            memoryStoreEvictionPolicy="LRU">
        <!-- 配置缓存事件监听器 replicateAsynchronously 操作是否异步,默认值为true. replicatePuts 添加操作是否同步到集群内的其他缓存,默认为true.
            replicateUpdates 更新操作是否同步到集群内的其他缓存,默认为true. replicateUpdatesViaCopy 更新之后的对象是否复制到集群中的其他缓存(true);
            replicateRemovals 删除操作是否同步到集群内的其他缓存,默认为true. -->
        <cacheEventListenerFactory
                class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
                properties="
                    replicateAsynchronously=true,
                    replicatePuts=true,
                    replicateUpdates=true,
                    replicateUpdatesViaCopy=true,
                    replicateRemovals=true " />


        <!-- 初始化缓存，以及自动设置 -->
        <bootstrapCacheLoaderFactory
                class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory"
                properties="bootstrapAsynchronously=true" />
    </cache>

</ehcache>
