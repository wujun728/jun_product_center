<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.dao.PartsRepBillMapper">
	<resultMap id="BaseResultMap"
		type="com.oracle.vo.PartsRepBill">
		<id column="billid" jdbcType="INTEGER" property="billid" />
		<result column="billflag" jdbcType="VARCHAR"
			property="billflag" />
		<result column="billtype" jdbcType="VARCHAR"
			property="billtype" />
		<result column="partsid" jdbcType="INTEGER" property="partsid" />
		<result column="billcount" jdbcType="INTEGER"
			property="billcount" />
		<result column="billtime" jdbcType="TIMESTAMP"
			property="billtime" />
		<result column="billuser" jdbcType="INTEGER"
			property="billuser" />
	</resultMap>
	<sql id="Base_Column_List">
		billid, billflag, billtype, partsid, billcount, billtime,
		billuser
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from biz_partsrepbill
		where billid = #{billid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from biz_partsrepbill
		where billid =
		#{billid,jdbcType=INTEGER}
	</delete>


	<insert id="insert" parameterType="com.oracle.vo.PartsRepBill">
		insert into biz_partsrepbill
		(billid, billflag, billtype,
		partsid, billcount, billtime,
		billuser,descript)
		values (#{billid,jdbcType=INTEGER},
		#{billflag,jdbcType=VARCHAR},
		#{billtype,jdbcType=VARCHAR},
		#{partsid,jdbcType=INTEGER}, #{billcount,jdbcType=INTEGER}, now(),
		#{billuser,jdbcType=INTEGER},#{descript,jdbcType=VARCHAR})
	</insert>


	<insert id="insertSelective"
		parameterType="com.oracle.vo.PartsRepBill">
		insert into biz_partsrepbill
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="billid != null">
				billid,
			</if>
			<if test="billflag != null">
				billflag,
			</if>
			<if test="billtype != null">
				billtype,
			</if>
			<if test="partsid != null">
				partsid,
			</if>
			<if test="billcount != null">
				billcount,
			</if>
			<if test="billtime != null">
				billtime,
			</if>
			<if test="billuser != null">
				billuser,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="billid != null">
				#{billid,jdbcType=INTEGER},
			</if>
			<if test="billflag != null">
				#{billflag,jdbcType=VARCHAR},
			</if>
			<if test="billtype != null">
				#{billtype,jdbcType=VARCHAR},
			</if>
			<if test="partsid != null">
				#{partsid,jdbcType=INTEGER},
			</if>
			<if test="billcount != null">
				#{billcount,jdbcType=INTEGER},
			</if>
			<if test="billtime != null">
				#{billtime,jdbcType=TIMESTAMP},
			</if>
			<if test="billuser != null">
				#{billuser,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.oracle.vo.PartsRepBill">
		update biz_partsrepbill
		<set>
			<if test="billflag != null">
				billflag = #{billflag,jdbcType=VARCHAR},
			</if>
			<if test="billtype != null">
				billtype = #{billtype,jdbcType=VARCHAR},
			</if>
			<if test="partsid != null">
				partsid = #{partsid,jdbcType=INTEGER},
			</if>
			<if test="billcount != null">
				billcount = #{billcount,jdbcType=INTEGER},
			</if>
			<if test="billtime != null">
				billtime = #{billtime,jdbcType=TIMESTAMP},
			</if>
			<if test="billuser != null">
				billuser = #{billuser,jdbcType=INTEGER},
			</if>
		</set>
		where billid = #{billid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.oracle.vo.PartsRepBill">
		update biz_partsrepbill
		set billflag =
		#{billflag,jdbcType=VARCHAR},
		billtype = #{billtype,jdbcType=VARCHAR},
		partsid = #{partsid,jdbcType=INTEGER},
		billcount =
		#{billcount,jdbcType=INTEGER},
		billtime =
		#{billtime,jdbcType=TIMESTAMP},
		billuser = #{billuser,jdbcType=INTEGER}
		where billid = #{billid,jdbcType=INTEGER}
	</update>

	<select id="getAll" resultType="map">
		select c.name billtype,billcount,partsname,billtime,e.name empname
		from biz_parts b,sys_code c,sys_emp e,biz_partsrepbill b1
		where b1.partsid = b.partsid and b1.billtype = c.code and e.id = b1.billuser
	</select>

	<select id="getCode" resultType="map" parameterType="string">
		select
		code,name from sys_code where type=#{type}
	</select>

	<select id="getBillsByLike" parameterType="map" resultType="map">
		select c.name billtype,billcount,partsname,billtime,e.name empname
		from biz_parts b,sys_code c,sys_emp e,biz_partsrepbill b1
		where b1.partsid = b.partsid and b1.billtype = c.code and e.id = b1.billuser
		
		<if test="map.partsname != null and map.partsname != ''">
			and partsname like concat('%',#{map.partsname},'%')
		</if>

		<if test="map.billtype != null and map.billtype != ''">
			and billtype = #{map.billtype}
		</if>

		<if test="map.billtime != null and map.billtime != null">
			and p.billtime like concat {'%',#{map.billtime},'%'}
		</if>


	</select>


</mapper>