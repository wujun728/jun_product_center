<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.dao.OrderDetailMapper">
	<resultMap id="BaseResultMap"
		type="com.oracle.vo.OrderDetail">
		<id column="OrderDetailId" jdbcType="INTEGER"
			property="orderdetailid" />
		<result column="PartsId" jdbcType="INTEGER" property="partsid" />
		<result column="OrderId" jdbcType="INTEGER" property="orderid" />
		<result column="OrderPartsCount" jdbcType="INTEGER"
			property="orderpartscount" />
	</resultMap>
	<sql id="Base_Column_List">
		OrderDetailId, PartsId, OrderId, OrderPartsCount
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from biz_orderdetail
		where OrderDetailId = #{orderdetailid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from biz_orderdetail
		where OrderDetailId = #{orderdetailid,jdbcType=INTEGER}
	</delete>


	<insert id="insert" parameterType="com.oracle.vo.OrderDetail">
		insert into biz_orderdetail (OrderDetailId, PartsId, OrderId,
		OrderPartsCount)
		values (#{orderdetailid,jdbcType=INTEGER}, #{partsid,jdbcType=INTEGER},
		#{orderid,jdbcType=INTEGER},
		#{orderpartscount,jdbcType=INTEGER})
	</insert>


	<insert id="insertSelective"
		parameterType="com.oracle.vo.OrderDetail">
		insert into biz_orderdetail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderdetailid != null">
				OrderDetailId,
			</if>
			<if test="partsid != null">
				PartsId,
			</if>
			<if test="orderid != null">
				OrderId,
			</if>
			<if test="orderpartscount != null">
				OrderPartsCount,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderdetailid != null">
				#{orderdetailid,jdbcType=INTEGER},
			</if>
			<if test="partsid != null">
				#{partsid,jdbcType=INTEGER},
			</if>
			<if test="orderid != null">
				#{orderid,jdbcType=INTEGER},
			</if>
			<if test="orderpartscount != null">
				#{orderpartscount,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.oracle.vo.OrderDetail">
		update biz_orderdetail
		<set>
			<if test="partsid != null">
				PartsId = #{partsid,jdbcType=INTEGER},
			</if>
			<if test="orderid != null">
				OrderId = #{orderid,jdbcType=INTEGER},
			</if>
			<if test="orderpartscount != null">
				OrderPartsCount = #{orderpartscount,jdbcType=INTEGER},
			</if>
		</set>
		where OrderDetailId = #{orderdetailid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.oracle.vo.OrderDetail">
		update biz_orderdetail
		set PartsId = #{partsid,jdbcType=INTEGER},
		OrderId = #{orderid,jdbcType=INTEGER},
		OrderPartsCount = #{orderpartscount,jdbcType=INTEGER}
		where OrderDetailId = #{orderdetailid,jdbcType=INTEGER}
	</update>

	<select id="getOrderId" resultType="integer"
		parameterType="string">
		select orderid from biz_order where ordercode=#{ordercode}
	</select>

	<update id="updateNum" parameterType="integer">
		update biz_partsrepertory set partsreqcount = partsreqcount+#{partsreqcount}
	</update>

	<select id="getChecks" resultType="map" parameterType="map">
		select orderid,ordercode,orderdate,name
		from sys_code c,biz_order b
		where c.code = b.orderflag
		<trim prefix="and">
			<if test="ordercode != null">
				 ordercode like concat('%',#{ordercode},'%')
			</if>

			<if test="orderdate != null">
				and orderdate like concat('%',#{orderdate},'%')
			</if>

			<if test="orderflag != null">
				and orderflag like concat('%',#{orderflag},'%')
			</if>
		</trim>

	</select>

</mapper>